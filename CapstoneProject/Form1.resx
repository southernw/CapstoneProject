<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/4QBaRXhpZgAATU0AKgAAAAgABAExAAIAAAAUAAAAPlEQAAEAAAAB
        AQAAAFERAAQAAAABAAAuI1ESAAQAAAABAAAuIwAAAABBZG9iZSBGaXJld29ya3MgQ1M1AP/bAEMAAgEB
        AgEBAgICAgICAgIDBQMDAwMDBgQEAwUHBgcHBwYHBwgJCwkICAoIBwcKDQoKCwwMDAwHCQ4PDQwOCwwM
        DP/bAEMBAgICAwMDBgMDBgwIBwgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDP/AABEIAG4AZAMBIgACEQEDEQH/xAAfAAABBQEBAQEBAQAAAAAAAAAAAQIDBAUGBwgJ
        Cgv/xAC1EAACAQMDAgQDBQUEBAAAAX0BAgMABBEFEiExQQYTUWEHInEUMoGRoQgjQrHBFVLR8CQzYnKC
        CQoWFxgZGiUmJygpKjQ1Njc4OTpDREVGR0hJSlNUVVZXWFlaY2RlZmdoaWpzdHV2d3h5eoOEhYaHiImK
        kpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4eLj5OXm5+jp6vHy8/T1
        9vf4+fr/xAAfAQADAQEBAQEBAQEBAAAAAAAAAQIDBAUGBwgJCgv/xAC1EQACAQIEBAMEBwUEBAABAncA
        AQIDEQQFITEGEkFRB2FxEyIygQgUQpGhscEJIzNS8BVictEKFiQ04SXxFxgZGiYnKCkqNTY3ODk6Q0RF
        RkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqCg4SFhoeIiYqSk5SVlpeYmZqio6Slpqeoqaqys7S1
        tre4ubrCw8TFxsfIycrS09TV1tfY2dri4+Tl5ufo6ery8/T19vf4+fr/2gAMAwEAAhEDEQA/AP38qO6u
        4rG1knnkjhhhUvJI7BVRQMkkngADnJqSvC/GOmL+1v8AGPUvCtwfO+GfgOaOPXoA37rxNqpVZVsZMfet
        beNo5JU6SySxxtlY5UbOpPlWm72M6tTlWmrei/r8WaEX7Tms/FqVk+E/hP8A4SnTQzJ/wk+q3Z0zQHIy
        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
</value>
  </data>
</root>